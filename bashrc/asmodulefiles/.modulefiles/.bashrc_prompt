# The prompt
RED="\[\033[0;31m\]"
YELLOW="\[\033[0;33m\]"
GREEN="\[\033[0;32m\]"
BLUE="\[\033[1;33m\]"
LIGHT_RED="\[\033[1;31m\]"
LIGHT_GREEN="\[\033[1;32m\]"
WHITE="\[\033[1;37m\]"
LIGHT_GRAY="\[\033[0;37m\]"
COLOR_NONE="\[\e[0m\]"

function parse_git_branch {
git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/(\1) /'
}

if [ "$color_prompt" = yes ]; then
    PS1='\[\033[0;31m\]$(date +%H:%M)\[\033[00m\] ${debian_chroot:+($debian_chroot)}\[\033[01;30m\]\u:\[\033[01;34m\]\w\[\033[00m\] \[\033[01;35m\]$(parse_git_branch)\[\033[00m\]> '
else
    PS1='$(date +%H:%M) ${debian_chroot:+($debian_chroot)}\u@\h:\w $(parse_git_branch)\$ '
fi

#function prompt_func() {
#    previous_return_value=$?;
#    HOST=""
#    if [ -n "$SSH_CONNECTION" ]; then
#	HOST="\h:"
#    fi
#    prompt="[${YELLOW}\t${COLOR_NONE} ${HOST}${BLUE}\w${GREEN}$(__git_ps1 " (%s)")${COLOR_NONE}]"
#
#    # Color the prompt if the last command return exit status != 0
#    if test $previous_return_value -eq 0
#    then
#        PS1="${prompt}\$ "
#    else
#        PS1="${prompt}${RED}${previous_return_value}\$${COLOR_NONE} "
#    fi
#}

#PROMPT_COMMAND=prompt_func
